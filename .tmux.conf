# config {{{

# 0 is too far from ` ;)
set -g base-index 1

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

# set -g default-terminal "rxvt-unicode-256color"
# set -g default-terminal "xterm-256color"



setw -g mode-mouse on # options till 2.1
set -g mouse-select-window on
set -g mouse-select-pane on
set -g mouse-resize-pane on

set-option -g -q mouse on # since 2.1 only mouse option
setw -g mode-keys vi
bind-key MouseDragEnd1Pane copy-selection -x       # disable jump to bottom after select (>2.2)

# reorder windows in status bar by drag & drop
bind-key -n MouseDrag1Status swap-window -t=

# # fix MouseWheel scrolling in 2.1
# bind -T root WheelUpPane   if-shell -F -t = "#{alternate_on}" "send-keys -M" \
   # "select-pane -t= \; copy-mode -e \; send-keys -M"
# bind -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" \
   # "select-pane -t= \;                 send-keys -M"
# # speed up with Shift - Wheel
# bind -T root S-WheelUpPane if-shell -F -t = "#{alternate_on}" "send-keys -M" \
   # "select-pane -t= \; copy-mode -e \; send-keys -M"
# bind -t vi-copy    S-WheelUpPane   halfpage-up
# bind -t vi-copy    S-WheelDownPane halfpage-down

# check if version is newer then 2.1 - requires zsh function verlte using sort -V
# if-shell "[[ 0 == $(verlte 2.1 $(tmux -V | awk '{print $2}'); echo $?) ]]" \
   # "setw -g mode-mouse on; set -g mouse-select-window on; set -g mouse-select-pane on; set -g mouse-resize-pane on" \
   # "set-option -g -q mouse on" # now only mouse option



#}}
#}}}

# bind keys {{{
# Reload tmux config
bind r source-file ~/.tmux.conf #; display-message "source-file done"


# remap prefix to Control + a
set -g prefix C-a
# bind 'C-a a' to type 'C-a'
bind a send-prefix
unbind C-b

# switch tabs with <b n>
# can hold Ctrl
bind C-p previous-window
bind p previous-window
bind C-n next-window
bind n next-window

# no marking with m do it with b instead
# bind b select-pane -m

# vi like paste
bind-key p paste-buffer

# quick pane cycling
bind C-a select-pane -t :.+

bind-key v split-window -h
bind-key s split-window -v

bind-key J resize-pane -D 10
bind-key K resize-pane -U 10
bind-key H resize-pane -L 10
bind-key L resize-pane -R 10

bind-key M-j resize-pane -D 2
bind-key M-k resize-pane -U 2
bind-key M-h resize-pane -L 2
bind-key M-l resize-pane -R 2

# # Vim style pane selection
bind h select-pane -L
bind j select-pane -D 
bind k select-pane -U
bind l select-pane -R

# # Use Alt-vim keys without prefix key to switch panes
# bind -n M-h select-pane -L
# bind -n M-j select-pane -D 
# bind -n M-k select-pane -U
# bind -n M-l select-pane -R

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n M-h if-shell "$is_vim" "send-keys C-w h" "select-pane -L"
bind -n M-j if-shell "$is_vim" "send-keys C-w j" "select-pane -D"
bind -n M-k if-shell "$is_vim" "send-keys C-w k" "select-pane -U"
bind -n M-l if-shell "$is_vim" "send-keys C-w l" "select-pane -R"
# bind -n M-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind C-l send-keys 'C-l'

# bind key for synchronizing panes
bind-key y set-window-option synchronize-panes

# find asci keycodes with "sudo showkey -a" - works only tmux >1.7
# us-keyboard like [ ]
bind-key -r 0xc3 display 'c3 prefix binding hack'
bind-key -r 0xb6 copy-mode # ö
bind-key -r 0xa3 paste-buffer # ä
# us { }
bind-key -r 0x96 swap-pane -U # Ö - swap pane to prev position
bind-key -r 0x84 swap-pane -D # Ä - to next pos


bind-key P command-prompt -p 'save history to filename:' -I '~/tmux.history' 'capture-pane -S -32768 ; save-buffer %1 ; delete-buffer'

#}}}

#### Theme {{{

# default statusbar colors
set-option -g status-bg black
set-option -g status-fg colour137 #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour244 #base0
set-window-option -g window-status-bg black
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg black # colour166 #orange
set-window-option -g window-status-current-bg white # colour239 # default
set-window-option -g window-status-current-attr bold

# activity window
setw -g monitor-activity on
#setw -g window-status-activity-bg red
setw -g window-status-activity-fg white
set-window-option -g window-status-activity-attr bold

# pane border
set-option -g pane-border-fg white
set-option -g pane-border-bg black

set-option -g pane-active-border-fg colour166
set-option -g pane-active-border-bg black

# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour colour64 #green

# status line
set -g status-right "CPU: #{cpu_icon}#{cpu_percentage} | Cont: #{continuum_status} | %h-%d %H:%M"

# }}}

# plugins {{{

# run < Prefix - I > to update the plugins!!!
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @resurrect-dir '~/.tmux/resurrect-sessions'
# for vim
set -g @resurrect-strategy-vim 'session'
# for neovim
set -g @resurrect-strategy-nvim 'session'
# check out https://github.com/xolox/vim-session
set -g @resurrect-capture-pane-contents 'on'

set -g @plugin 'tmux-plugins/tmux-continuum'
# auto restore
set -g @continuum-restore 'off'
set -g @continuum-boot 'on'

# better copy-mode scrolling options
set -g @plugin 'nhdaly/tmux-scroll-copy-mode'
set -g @emulate-scroll-for-no-mouse-alternate-buffer 'on'
set -g @scroll-speed-num-lines-per-scroll "5"

# yank to system clipboard
set -g @plugin 'tmux-plugins/tmux-yank'
# predefines searches
set -g @plugin 'tmux-plugins/tmux-copycat'

set -g @plugin 'tmux-plugins/tmux-cpu'


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
# }}}


if-shell "[ -f ~/.tmux.conf.frq ]" "source-file ~/.tmux.conf.frq"
